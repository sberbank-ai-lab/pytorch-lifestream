{
  include "dataset_inference_file.hocon"

  data_module: {
    distribution_targets_task : True

    type: map

    setup: {
      dataset_files: {
        train_data_path: "data/train_trx_file.parquet"
        test_data_path: "data/test_trx_file.parquet"
      }
      col_id: client_id
      col_id_dtype: int
      col_target: distribution

      split_by: embeddings_validation
      fold_info: "conf/embeddings_validation.work/folds/folds.json"
    }

    train: {
        min_seq_len: 0
        augmentations: [
            [RandomSlice, {min_len: 250, max_len: 350, rate_for_min: 0.9}]
            [DropoutTrx, {trx_dropout: 0.01}]
        ]
        num_workers: 16
        batch_size: 32
        take_first_fraction: 0.5
    }

    valid: {
        augmentations: [
            [SeqLenLimit, {max_seq_len: 1200}]
        ]
        num_workers: 8
        batch_size: 512
        take_first_fraction: 0.5
    }

    test: {
        augmentations: []
        num_workers: 8
        batch_size: 512
        take_first_fraction: 0.5
    }
  }

  embedding_validation_results: {
    model_name: stats
    feature_name: target_scores
    output_path: "results/fit_target_distribution_results_statistics.json"
  }

  seed_everything: 42
  trainer: {
    gpus: 0
    auto_select_gpus: false

    max_epochs: 0

    checkpoint_callback: false
    deterministic: True
  }
  logger_name: target_scores

  params: {
    pos: True, neg: False,
    columns_ix: {pos_sum: 0,
                 pos_distribution: 1
                 neg_sum: 2,
                 neg_distribution: 3},
    top_positive_trx: [1, 24, 11, 5, 2, 18, 3, 9, 4, 28, 13, 15, 36, 46, 21, 23, 14, 39,
                       64, 80, 12, 25, 55, 20, 43, 16, 8, 26, 34, 109, 32, 57, 54, 61, 7,
                       22, 44, 50, 72, 0, 40, 10, 29, 37, 82, 52, 35, 33, 75, 31, 53, 62,
                       17, 83, 45, 6, 66, 112, 59, 19, 91, 67, 65, 147, 86, 79, 63, 81, 69,
                       106, 77, 48, 30, 78, 105, 42, 98, 87, 27, 58, 141, 92, 102, 76, 121,
                       103, 137, 70, 123, 38, 74, 97, 49, 95, 47, 96, 73, 101, 151, 68, 51,
                       125, 41, 156, 56, 139, 115, 122, 113, 89, 144, 170, 140, 110, 120, 154,
                       153, 111, 161, 104, 90, 114, 84, 131, 100, 88, 143, 130, 166, 124, 174,
                       158, 107, 150, 146, 173, 142, 138, 71, 94, 132, 99, 135, 117, 160, 181,
                       127, 169, 133, 116, 171, 148, 162, 163, 134, 129, 136, 178, 172, 85,
                       179, 176, 149, 177, 145, 155, 119, 190, 168, 165, 167, 93, 108, 180,
                       182, 60, 126, 191, 157, 185, 184, 118, 164, 187, 128, 195, 159, 186,
                       198, 152, 193, 192, 183, 189, 196, 175, 188, 202, 200, 197, 203, 199],
  
    score_metric: [R2p, MAPEp, KLp, CEp],

    category_names: [small_group],
    category_max_size: {small_group: 1000},
    numeric_values: [amount_rur],

    encoder_type: statistics,
    trx_encoder: {
      distribution_targets_task : True
      norm_embeddings: false,
      embeddings_noise: 0.003,
      embeddings: {
        tr_type: {in: 100}
      },
      numeric_values: {
        amount: identity
      }
      was_logified: true
      log_scale_factor: 1
    },

    head_layers: [
      [DummyHead, {}]
    ]

    train: {
      random_neg: false,
      loss: distribution_targets,
      lr: 0.005,
      weight_decay: 0.0,
    },
    lr_scheduler: {
      step_size: 1,
      step_gamma: 0.90
    }
  }
}
