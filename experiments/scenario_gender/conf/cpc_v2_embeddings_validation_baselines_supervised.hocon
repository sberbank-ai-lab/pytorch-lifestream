{
    environment: {
        work_dir: "embeddings_validation.work"
    }

    target: {
        file_name: "../data/gender_train.csv"
        cols_id: [customer_id]
        cols_id_type: [int]
        col_target: gender
    }

    split: {
        fit_ids: true

        train_id: {
            file_name: "../data/gender_train.csv"
        }
        test_id: {
            file_name: "../data/test_ids.csv"
        }

        cv_split_count: 5
        is_stratify: true
        random_state: 42
    }

    models: {
        linear: {
            enabled: false
            cls_name: sklearn.linear_model.LogisticRegression
            params: {},
            cpu_count: 1
            preprocessing: [
                [sklearn.preprocessing.MaxAbsScaler, {}]
            ]
        }
        lgbm: {
            enabled: true
            cls_name: lightgbm.LGBMClassifier,
            params: {
                n_estimators: 500
                boosting_type: gbdt
                objective: binary
                metric: auc
                subsample: 0.5
                subsample_freq: 1
                learning_rate: 0.02
                feature_fraction: 0.75
                max_depth: 6
                lambda_l1: 1
                lambda_l2: 1
                min_data_in_leaf: 50
                random_state: 42
                n_jobs: 8
                reg_alpha: null
                reg_lambda: null
                colsample_bytree: null
                min_child_samples: null
            },
            cpu_count: 8
            preprocessing: [
                [sklearn.preprocessing.MaxAbsScaler, {}]
            ]
        }
        xgb: {
            enabled: false
            cls_name: xgboost.XGBClassifier
            params: {
                n_jobs=4,
                seed=42,
                n_estimators=300,
            },
            cpu_count: 4
            preprocessing: [
                [sklearn.preprocessing.MaxAbsScaler, {}]
            ]
        }
    }

    metrics: {
        auroc: {
            enabled: true
            score_func: sklearn.metrics.roc_auc_score
            scorer_params: {needs_proba: true}

        }
        accuracy: {
            enabled: true
            score_func: sklearn.metrics.accuracy_score
            scorer_params: {needs_proba: false}
        }
    }
    
    report_file: "../results/scenario_gender_baselines_supervised_cpc_v2.txt"

    features: {
    }

    external_scores: {
        fit_target: "../results/fit_target_results.json"
        cpc_v2_finetuning_split_count_20: "../results/cpc_v2_sub_seq_sampl_strategy_split_count_20.json"
        cpc_v2_finetuning_split_count_30: "../results/cpc_v2_sub_seq_sampl_strategy_split_count_30.json"
        cpc_v2_finetuning_split_count_40: "../results/cpc_v2_sub_seq_sampl_strategy_split_count_40.json"
        cpc_v2_finetuning_split_count_50: "../results/cpc_v2_sub_seq_sampl_strategy_split_count_50.json"
    }

    report: {
        is_check_train: false
        error_handling: fail
        print_all_metrics: false

        metrics: {
            auroc: {float_format: "{:.3f}", baseline_key=["nn", "target_scores"], split_columns: true}
        }
    }
}
